/*
 * encho_radar.c
 *
 *  Created on: Jul 16, 2020
 *      Author: ar725
 */

#include "echo_radar.h"

void EchoRadar_UpdateViewing(void) {
	echoRadar.stepAngle = /*EncoderGetTublerState(&encoder)*10*/10;
	echoRadar.mapLength = ECHO_MOTOR_VIEWING_ANGLE * 2 / echoRadar.stepAngle;
}

uint16_t EchoRadar_GetMapLength() {
	return echoRadar.mapLength;
}
uint16_t EchoRadar_GetMapValue(uint16_t i) {
	return echoRadar.map[i];
}

void EchoRadar_Init(void) {
	EchoRadar_UpdateViewing();
	motor.position = -ECHO_MOTOR_VIEWING_ANGLE + 1;
	echoRadar.counter = 0;
	echoRadar.HCSR_State = 1;
	echoRadar.mapIndex = 0;
	echoRadar.standartMapReadingFlag = 1;
}

void EchoRadar_Precessing(void) {
	if(EncoderGetButtonState(&encoder)) {
		EchoRadar_UpdateViewing();
		if(echoRadar.HCSR_State) {
			HCSR04_ReadDistance(&hcsr);
		}
	} else {
		StepMotorWrite(&motor, 0, 0, 0, 0);
	}
}

void EchoRadar_CaptureCallbackHandler(TIM_HandleTypeDef *htim) {
	if(htim == hcsr.htim) {
		EchoRadar_EnableMotor();
	}
}

void EchoRadar_EnableMotor(void) {
	HAL_TIM_Base_Start(&htim6);
	HAL_TIM_Base_Start_IT(&htim6);
	echoRadar.map[echoRadar.mapIndex] = HCSR04_GetDistance(&hcsr);
	/*if(echoRadar.mapIndex == echoRadar.mapLength-10) {
		echoRadar.mapIndex = echoRadar.mapIndex;
	}*/
	if(motor.direction) {
		echoRadar.mapIndex++;
		if(motor.position + echoRadar.stepAngle  >= ECHO_MOTOR_VIEWING_ANGLE) {
				motor.direction = 0;
		}
	} else {
		echoRadar.mapIndex--;
		if(motor.position - echoRadar.stepAngle <= -ECHO_MOTOR_VIEWING_ANGLE) {
				motor.direction = 1;
		}
	}
	echoRadar.HCSR_State = 0;
}

void EchoRadar_DisableMotor(void) {
	HAL_TIM_Base_Stop(&htim6);
	HAL_TIM_Base_Stop_IT(&htim6);
	echoRadar.HCSR_State = 1;
}

void EchoRadar_MotorTimerHandler(void) {
	if(echoRadar.counter >= echoRadar.stepAngle) {
		EchoRadar_DisableMotor();
		echoRadar.counter = 0;
	} else {
		StepMotorRotate(&motor);
		echoRadar.counter++;
	}
}
